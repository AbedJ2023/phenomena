{"version":3,"file":"main.js","mappings":";;;;;AAAAA,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wB","sources":["webpack://project_phenomena/./src/index.js"],"sourcesContent":["console.log(\"hello world\");\n\n// import axios from \"axios\";\n// import React, { useEffect, useState } from \"react\";\n// import { createRoot } from \"react-dom/client\";\n\n// const App = () => {\n//   const [reports, setReports] = useState([]);\n//   const [title, setTitle] = useState([\"\"]);\n//   const [location, setLocation] = useState([\"\"]);\n//   const [description, setDescription] = useState([\"\"]);\n\n//   useEffect(() => {\n//     const getReports = async () => {\n//       const response = await axios.get(\"/api/reports\");\n//       console.log(response.data);\n//     };\n//     getReports();\n//   });\n\n//   const onChange = (event) => {\n//     const name = event.target.name;\n//     const value = event.target.value;\n//     if (name === \"title\") {\n//       setTitle(value);\n//     } else if (name === \"location\") {\n//       setLocation(value);\n//     }\n//   };\n//   return (\n//     <>\n//       <h1>hello</h1>\n//       <ul>\n//         {reports.map((report) => {\n//           return <li>{report.title}</li>;\n//         })}\n//       </ul>\n//       <form>\n//         <input\n//           type=\"text\"\n//           value={title}\n//           onChange={onChange}\n//           name=\"title\"\n//           placeholder=\"title\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={location}\n//           onChange={onChange}\n//           name=\"location\"\n//           placeholder=\"location\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={description}\n//           onChange={onChange}\n//           name=\"description\"\n//           placeholder=\"description\"\n//         />\n//       </form>\n//     </>\n//   );\n// };\n\n// const root = createRoot(document.getElementById(\"root\"));\n// root.render(<App />);\n"],"names":["console","log"],"sourceRoot":""}